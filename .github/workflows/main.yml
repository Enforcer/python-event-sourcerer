name: Lint & tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
env:
  PYTHON_VERSION: "3.10"
  POETRY_VERSION: "1.6.1"

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: es
          POSTGRES_PASSWORD: es
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      eventstoredb:
        image: eventstore/eventstore:latest
        env:
          EVENTSTORE_MEM_DB: True
          EVENTSTORE_CLUSTER_SIZE: 1
          EVENTSTORE_RUN_PROJECTIONS: All
          EVENTSTORE_START_STANDARD_PROJECTIONS: true
          EVENTSTORE_INSECURE: true
          EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP: true
        ports:
          - 1113:1113
          - 2113:2113

    steps:
    - uses: actions/checkout@v2
    - name: Cache Poetry cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry
        key: poetry-cache-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ env.POETRY_VERSION }}
    - name: Cache Packages
      uses: actions/cache@v2
      with:
        path: ~/.local
        key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install deps
      run: |
        python -m pip install --upgrade pip poetry==${{ env.POETRY_VERSION }}
        poetry install
    - name: Run linters
      run: |
        poetry run make lint
    - name: Test with pytest
      run: |
        poetry run make test
