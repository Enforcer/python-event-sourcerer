[tool.poetry]
name = "python-event-sourcery"
version = "0.2.0"
description = ""
authors = ["Your Name <you@example.com>"]
license = "MIT"
packages = [
    { include = "event_sourcery" },
    { include = "event_sourcery_esdb" },
    { include = "event_sourcery_kombu" },
    { include = "event_sourcery_sqlalchemy" },
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
pydantic = ">=2.0,<3"
SQLAlchemy = ">=2.0"
esdbclient = ">=1.0b3"
kombu = {version = "*", optional = true}
cloudevents = {version = "*", optional = true}
django = {version = ">=4,<6", optional = true}
more-itertools = "*"

[tool.poetry.dev-dependencies]
black = "*"
isort = "*"
flake8 = "*"
bandit = "*"
mypy = "*"
pytest = "*"
pytest-cov = "*"
mkdocs-material = "^8.3.9"
psycopg2-binary = "^2.9.3"

[tool.poetry.extras]
kombu = ["kombu"]
cloudevents = ["cloudevents"]
django = ["django"]

[tool.poetry.group.dev.dependencies]
pytest-django = {version = "*"}

[tool.pytest]
addopts = ""

[tool.pytest.ini_options]
markers = [
    "not_implemented: skip not implemented yet backend functionality",
    "skip_esdb: skip features not supported by esdb or our implementation on top of it",
    "skip_in_memory: skip features not supported by in-memory event store",
]
DJANGO_SETTINGS_MODULE = "tests.django_tests.django_tests.settings"

[tool.coverage.run]
branch = true
source = [
    "event_sourcery",
    "event_sourcery_esdb",
    "event_sourcery_sqlalchemy",
    "event_sourcery_kombu",
]
omit = [
    "event_sourcery_kombu/*",
]

[tool.coverage.report]
fail_under = 100
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "pass",
    "\\.\\.\\.",
    "NotImplementedError",
    "__repr__",
    "__str__",
    "TYPE_CHECKING",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
